str(magazine)
head(magazine)
# barplot(H,xlab,ylab,main, names.arg,col)
case17<-magazine%>%filter(구분==2017)%>%melt(id="구분")
yr17v<-case17$value
case16<-magazine%>%filter(구분==2016)%>%melt(id="구분")
yr16v<-(case16$value)
yr16v
className<-case17["variable"]
className
barplot(yr17v,names.arg = "className",col=colors)
legend("topright",yr16v,cex=1.3,fill=colors)
# barplot(H,xlab,ylab,main, names.arg,col)
case17<-magazine%>%filter(구분==2017)%>%melt(id="구분")
yr17v<-case17$value
case16<-magazine%>%filter(구분==2016)%>%melt(id="구분")
yr16v<-(case16$value)
yr16v
className<-case17["variable"]
className
barplot(yr17v,names.arg = "className",col=colors)
legend("topright",yr16v,cex=1.3,fill=colors)
head(magazine)
class(magazine)
barplot(as.matrix(magazine))
magazine<-magazine[-1]
magazine
barplot(as.matrix(magazine))
barplot(as.matrix(magazine),ylim=c(0,250000))
barplot(as.matrix(magazine),ylim=c(0,250000),col=rainbow(nrows(magazine)))
barplot(as.matrix(magazine),ylim=c(0,250000),col=rainbow(nrow(magazine)))
summary(magazine)
head(magazine)
barplot(as.matrix(magazine),ylim=c(0,mean(magazine$시*2)),col=rainbow(nrow(magazine)))
summary(magazine)
magazine<-read.csv(file="magazine.csv", header = T)
head(magazine)
summary(magazine)
magazine<-magazine[-1]
barplot(as.matrix(magazine),ylim=c(0,max(magazine$시*2)),col=rainbow(nrow(magazine)))
barplot(as.matrix(magazine),ylim=c(0,mean(magazine$시)*2),col=rainbow(nrow(magazine)))
magazine<-read.csv(file="magazine.csv", header = T)
head(magazine)
summary(magazine)
magazine<-magazine[-1]
barplot(as.matrix(magazine),ylim=c(0,mean(magazine$시)*2),col=rainbow(nrow(magazine)))
barplot(as.matrix(magazine),ylim=c(0,max(magazine$시)*2),col=rainbow(nrow(magazine)))
barplot(as.matrix(magazine),ylim=c(0,220000,col=rainbow(nrow(magazine)))
barplot(as.matrix(magazine),ylim=c(0,220000),col=rainbow(nrow(magazine)))
magazine<-magazine[-1]
barplot(as.matrix(magazine),ylim=c(0,220000),col=rainbow(nrow(magazine)))
barplot(as.matrix(magazine),ylim=c(0,22000),col=rainbow(nrow(magazine)))
magazine<-read.csv(file="magazine.csv", header = T)
head(magazine)
summary(magazine)
magazine<-magazine[-1]
barplot(as.matrix(magazine),ylim=c(0,22000),col=rainbow(nrow(magazine)))
magazine<-read.csv(file="magazine.csv", header = T)
head(magazine)
summary(magazine)
magazine<-magazine[-1]
magazine
barplot(as.matrix(magazine),ylim=c(0,220000),col=rainbow(nrow(magazine)))
barplot(as.matrix(magazine),ylim=c(0,250000),col=rainbow(nrow(magazine)))
# 2
getwd()
rivers
str(rivers)
res<-hist(rivers,col ='skyblue',border='navy',breaks=8, xlab="miles")
res$breaks
res$counts
# 3
magazine<-read.csv(file="magazine.csv", header = T)
summary(magazine)
magazine<-magazine[-1]
barplot(as.matrix(magazine),ylim=c(0,250000),col=rainbow(nrow(magazine)))
barplot(as.matrix(magazine),ylim=c(0,250000),col=rainbow(nrow(magazine)))
legend("topright",yr16v,cex=1.3,fill=colors)
magazine<-magazine[-1]
barplot(as.matrix(magazine),ylim=c(0,250000),col=rainbow(nrow(magazine)))
legend("topright",names=c(2017,2016),cex=1.3,fill=rainbow(2))
# 3
magazine<-read.csv(file="magazine.csv", header = T)
summary(magazine)
magazine<-magazine[-1]
barplot(as.matrix(magazine),ylim=c(0,250000),col=rainbow(nrow(magazine)))
legend("topright",names=c(2017,2016),cex=1.3,fill=rainbow(2))
legend("topright",names(2017,2016),cex=1.3,fill=rainbow(2))
magazine<-magazine[-1]
barplot(as.matrix(magazine),ylim=c(0,250000),col=rainbow(nrow(magazine)))
legend("topright",names(2017,2016),cex=1.3,fill=rainbow(2))
legend("topright",names(2017,2016),cex=1.3)
magazine<-magazine[-1]
barplot(as.matrix(magazine),ylim=c(0,250000),col=rainbow(nrow(magazine)))
legend("topright",names(2017,2016),cex=1.3)
# 3
magazine<-read.csv(file="magazine.csv", header = T)
summary(magazine)
magazine<-magazine[-1]
barplot(as.matrix(magazine),ylim=c(0,250000),col=rainbow(nrow(magazine)))
legend("topright",names(2017,2016),cex=1.3)
legend("topright",c(2017,2016),cex=1.3)
barplot(as.matrix(magazine),ylim=c(0,250000),col=rainbow(nrow(magazine)))
legend("topright",c(2017,2016),cex=1.3)
legend("topright",c("2017","2016"),cex=1.3,col=rainbow(nrow(magazine)))
magazine<-magazine[-1]
barplot(as.matrix(magazine),ylim=c(0,250000))
# 3
magazine<-read.csv(file="magazine.csv", header = T)
summary(magazine)
magazine<-magazine[-1]
barplot(as.matrix(magazine),ylim=c(0,250000))
legend("topright",c("2017","2016"),cex=1.3,col=rainbow(nrow(magazine)))
magazine<-magazine[-1]
barplot(as.matrix(magazine),ylim=c(0,250000))
legend("topright",c("2017","2016"),cex=1.3,col=c("darkblue","red"))
legend("topright",c("2017","2016"),cex=1.3,fill=c("darkblue","red"))
legend("topright",legend=c("2017","2016"),cex=1.3,fill=c("darkblue","red"))
barplot(as.matrix(magazine),ylim=c(0,250000))
legend("topright",legend=c("2017","2016"),cex=1.3,fill=c("darkblue","red"))
legend("topright",legend=c("2017","2016"),fill=c("darkblue","red"))
magazine<-magazine[-1]
barplot(as.matrix(magazine),ylim=c(0,250000))
legend("topright",legend=c("2017","2016"),fill=c("darkblue","red"))
# 3
magazine<-read.csv(file="magazine.csv", header = T)
summary(magazine)
magazine<-magazine[-1]
barplot(as.matrix(magazine),ylim=c(0,250000))
legend("topright",legend=c("2017","2016"),fill=c("darkblue","red"))
barplot(as.matrix(magazine),ylim=c(0,250000),color=c("darkblue","red"))
magazine<-magazine[-1]
barplot(as.matrix(magazine),ylim=c(0,250000),color=c("darkblue","red"))
# 3
magazine<-read.csv(file="magazine.csv", header = T)
summary(magazine)
magazine<-magazine[-1]
barplot(as.matrix(magazine),ylim=c(0,250000),color=c("darkblue","red"))
barplot(as.matrix(magazine),ylim=c(0,250000),col=c("darkblue","red"))
legend("topright",legend=c("2017","2016"),fill=c("darkblue","red"))
# 3
magazine<-read.csv(file="magazine.csv", header = T)
summary(magazine)
magazine<-magazine[-1]
barplot(as.matrix(magazine),ylim=c(0,250000),col=c("darkblue","red"),
ylab="발행 건수")
legend("topright",legend=c("2017","2016"),fill=c("darkblue","red"))
rivers
str(rivers)
res<-hist(rivers,col ='skyblue',border='navy',breaks=8, xlab="miles")
res$breaks
res$counts
# 3
magazine<-read.csv(file="magazine.csv", header = T)
summary(magazine)
magazine<-magazine[-1]
barplot(as.matrix(magazine),ylim=c(0,250000),col=c("darkblue","red"),
ylab="발행 건수")
legend("topright",legend=c("2017","2016"),fill=c("darkblue","red"))
trees
str(trees)
head(trees)
# 각각의 히스토그램을 1개의 팔레트에 출력
g<-ggplot(trees,aes(x=Girth)) + geom_histogram(fill="cyan",colour="black")
h<-ggplot(trees,aes(x=Height)) + geom_histogram(fill="pink",colour="black")
v<-ggplot(trees,aes(x=Volume))+ geom_histogram(fill="blue",colour="black")
grid.arrange(g,h,v, nrow=1, ncol=3)
# 5
# (1)
ds<-diamonds
head(ds)
#(2)
theme_margin<-theme(plot.margin=unit(c(3,3,3,6), "cm"))
#(3)
p_cut<-ggplot(ds, aes(cut))+geom_bar(fill='pink')+ggtitle("Quality of the cut")
p_cut<- p_cut+theme(axis.title.y=element_text(angle=0,vjust=0.6,size=15))
p_cut # use for number(6)
p_cutFlop<- p_cut+coord_flip() # + flopped
p_margin<-p_cutFlop+theme_margin # + margin
p_margin
#(2)
theme_margin<-theme(plot.margin=unit(c(3,3,3,6), "cm"))
#(3)
p_cut<-ggplot(ds, aes(cut))+geom_bar(fill='pink')+ggtitle("Quality of the cut")
p_cut<- p_cut+theme(axis.title.y=element_text(angle=0,vjust=0.6,size=15))
p_cut # use for number(6)
p_cutFlop<- p_cut+coord_flip() # + flopped
p_margin<-p_cutFlop+theme_margin # + margin
p_margin
#(4)
p_cutFlop # w/o margin
#(5)
p_depth<-ggplot(ds,aes(depth))+ggtitle("Histogram of Depth")+xlab("percentage")
p_depth<- p_depth +stat_bin(fill="wheat",geom="bar")
p_depth
trees
str(trees)
head(trees)
# 각각의 히스토그램을 1개의 팔레트에 출력
g<-ggplot(trees,aes(x=Girth)) + geom_histogram(fill="cyan",colour="black")
h<-ggplot(trees,aes(x=Height)) + geom_histogram(fill="pink",colour="black")
v<-ggplot(trees,aes(x=Volume))+ geom_histogram(fill="blue",colour="black")
grid.arrange(g,h,v, nrow=1, ncol=3)
# 5
# (1)
ds<-diamonds
head(ds)
#(2)
theme_margin<-theme(plot.margin=unit(c(3,3,3,6), "cm"))
#(3)
p_cut<-ggplot(ds, aes(cut))+geom_bar(fill='pink')+ggtitle("Quality of the cut")
p_cut<- p_cut+theme(axis.title.y=element_text(angle=0,vjust=0.6,size=15))
p_cut # use for number(6)
p_cutFlop<- p_cut+coord_flip() # + flopped
p_margin<-p_cutFlop+theme_margin # + margin
p_margin
#(4)
p_cutFlop # w/o margin
#(5)
p_depth<-ggplot(ds,aes(depth))+ggtitle("Histogram of Depth")+xlab("percentage")
p_depth<- p_depth +stat_bin(fill="wheat",geom="bar")
p_depth
p_depth <- p_depth + theme(axis.title.y=element_text(angle=0,vjust=0.6,size=15))
final_p =grid.arrange(p_cut,p_depth,ncol=1)
#-2.plot two variables in one plot by ggplot w/ stat-bin
# from ggplot w/ stat_bin
p <-ggplot(ds, aes(depth))
p<-p + stat_bin(aes(color=cut),geom="bar")
p
# To set range of x-axis
xmin<-min(ds$depth)
xmax<-max(ds$depth)
# To set rage of y-aixs
tableCut<-table(ds$cut)
ymin<-min(tableCut)
ymax<-max(tableCut)
p_lims<- p+ xlim(0,xmax)+ylim(0,ymax)
p_lims
p_lims<- p+ xlim(0,xmax)+ylim(0,ymax)
p_lims
# To reset both axes
p
# 3
magazine<-read.csv(file="magazine.csv", header = T)
summary(magazine)
magazine<-magazine[-1]
barplot(as.matrix(magazine),ylim=c(0,250000),col=c("darkblue","red"),
ylab="발행 건수")
legend("topright",legend=c("2017","2016"),fill=c("darkblue","red"))
barplot(as.matrix(magazine),ylim=c(0,250000),col=c("magenta","orange"),
ylab="발행 건수")
legend("topright",legend=c("2017","2016"),fill=c("magenta","orange"))
barplot(as.matrix(magazine),ylim=c(0,250000),col=c("red","orange"),
ylab="발행 건수")
legend("topright",legend=c("2017","2016"),fill=c("red","orange"))
magazine<-magazine[-1]
barplot(as.matrix(magazine),col=c("red","orange"),
ylab="발행 건수")
# 3
magazine<-read.csv(file="magazine.csv", header = T)
summary(magazine)
magazine<-magazine[-1]
barplot(as.matrix(magazine),col=c("red","orange"),
ylab="발행 건수")
legend("topright",legend=c("2017","2016"),fill=c("red","orange"))
# 3
magazine<-read.csv(file="magazine.csv", header = T)
summary(magazine)
magazine<-magazine[-1]
barplot(as.matrix(magazine),col=c("red","orange"),
ylab="발행 건수",xlab="작품 종류")
legend("topright",legend=c("2017","2016"),fill=c("red","orange"))
# 3
magazine<-read.csv(file="magazine.csv", header = T)
summary(magazine)
magazine<-magazine[-1]
barplot(as.matrix(magazine),col=c("red","orange"),
main="문인잡지의 작품 발표 현황",ylab="발행 건수",xlab="작품 종류")
legend("topright",legend=c("2017","2016"),fill=c("red","orange"))
library(gridExtra)
trees
str(trees)
head(trees)
# 각각의 히스토그램을 1개의 팔레트에 출력
g<-ggplot(trees,aes(x=Girth)) + geom_histogram(fill="cyan",colour="black")
h<-ggplot(trees,aes(x=Height)) + geom_histogram(fill="pink",colour="black")
v<-ggplot(trees,aes(x=Volume))+ geom_histogram(fill="blue",colour="black")
library(ggplot2)
# 각각의 히스토그램을 1개의 팔레트에 출력
g<-ggplot(trees,aes(x=Girth)) + geom_histogram(fill="cyan",colour="black")
h<-ggplot(trees,aes(x=Height)) + geom_histogram(fill="pink",colour="black")
v<-ggplot(trees,aes(x=Volume))+ geom_histogram(fill="blue",colour="black")
grid.arrange(g,h,v, nrow=1, ncol=3)
# 5
# (1)
ds<-diamonds
head(ds)
#(2)
theme_margin<-theme(plot.margin=unit(c(3,3,3,6), "cm"))
#(3)
p_cut<-ggplot(ds, aes(cut))+geom_bar(fill='pink')+ggtitle("Quality of the cut")
p_cut<- p_cut+theme(axis.title.y=element_text(angle=0,vjust=0.6,size=15))
p_cut # use for number(6)
p_cutFlop<- p_cut+coord_flip() # + flopped
p_margin<-p_cutFlop+theme_margin # + margin
p_margin
#(4)
p_cutFlop # w/o margin
#(5)
p_depth<-ggplot(ds,aes(depth))+ggtitle("Histogram of Depth")+xlab("percentage")
p_depth<- p_depth +stat_bin(fill="wheat",geom="bar")
p_depth
#(6) Two different sets of plots just in case of any misleading
#-1.plotting two variables in one palette respectively
# coordinates need to be flopped again with no margin,
# thereby, "p_cut",which axes have not flopped, should be in usage
p_depth <- p_depth + theme(axis.title.y=element_text(angle=0,vjust=0.6,size=15))
final_p =grid.arrange(p_cut,p_depth,ncol=1)
#-2.plot two variables in one plot by ggplot w/ stat-bin
# from ggplot w/ stat_bin
p <-ggplot(ds, aes(depth))
p<-p + stat_bin(aes(color=cut),geom="bar")
p
# To set range of x-axis
xmin<-min(ds$depth)
xmax<-max(ds$depth)
# To set rage of y-aixs
tableCut<-table(ds$cut)
ymin<-min(tableCut)
ymax<-max(tableCut)
p_lims<- p+ xlim(0,xmax)+ylim(0,ymax)
p_lims
# To reset both axes
p
magazine<-read.csv(file="magazine.csv", header = T)
summary(magazine)
magazine<-magazine[-1]
barplot(as.matrix(magazine),col=c("red","orange"),
main="문인잡지의 작품 발표 현황",ylab="발행 건수",xlab="작품 종류")
legend("topright",legend=c("2017","2016"),fill=c("red","orange"))
magazine
magazine
magazine<-read.csv(file="magazine.csv", header = T)
magazine
# 3
getwd()
magazine<-read.csv(file="magazine.csv", header = T)
magazine
summary(magazine)
summary(magazine)
magazine<-magazine[-1]
barplot(as.matrix(magazine),col=c("red","orange"),
main="문인잡지의 작품 발표 현황",ylab="발행 건수",xlab="작품 종류")
legend("topright",legend=c("2017","2016"),fill=c("red","orange"))
library(gridExtra)
library(ggplot2)
trees
str(trees)
# 각각의 히스토그램을 1개의 팔레트에 출력
g<-ggplot(trees,aes(x=Girth)) + geom_histogram(fill="cyan",colour="black")
h<-ggplot(trees,aes(x=Height)) + geom_histogram(fill="pink",colour="black")
v<-ggplot(trees,aes(x=Volume))+ geom_histogram(fill="blue",colour="black")
grid.arrange(g,h,v, nrow=1, ncol=3)
# 5
# (1)
ds<-diamonds
head(ds)
#(2)
theme_margin<-theme(plot.margin=unit(c(3,3,3,6), "cm"))
#(3)
p_cut<-ggplot(ds, aes(cut))+geom_bar(fill='pink')+ggtitle("Quality of the cut")
p_cut<- p_cut+theme(axis.title.y=element_text(angle=0,vjust=0.6,size=15))
p_cut # use for number(6)
p_cutFlop<- p_cut+coord_flip() # + flopped
p_margin<-p_cutFlop+theme_margin # + margin
p_margin
#(4)
p_cutFlop # w/o margin
#(5)
p_depth<-ggplot(ds,aes(depth))+ggtitle("Histogram of Depth")+xlab("percentage")
p_depth<- p_depth +stat_bin(fill="wheat",geom="bar")
p_depth
#(6) Two different sets of plots just in case of any misleading
#-1.plotting two variables in one palette respectively
# coordinates need to be flopped again with no margin,
# thereby, "p_cut",which axes have not flopped, should be in usage
p_depth <- p_depth + theme(axis.title.y=element_text(angle=0,vjust=0.6,size=15))
final_p =grid.arrange(p_cut,p_depth,ncol=1)
#-2.plot two variables in one plot by ggplot w/ stat-bin
# from ggplot w/ stat_bin
p <-ggplot(ds, aes(depth))
p<-p + stat_bin(aes(color=cut),geom="bar")
p
# To set range of x-axis
xmin<-min(ds$depth)
xmax<-max(ds$depth)
# To set rage of y-aixs
tableCut<-table(ds$cut)
ymin<-min(tableCut)
ymax<-max(tableCut)
p_lims<- p+ xlim(0,xmax)+ylim(0,ymax)
p_lims
# To reset both axes
p
rivers
rivers
str(rivers)
res<-hist(rivers,col ='skyblue',border='navy',breaks=8, xlab="miles")
res<-hist(rivers,col =5,border='navy',breaks=8, xlab="miles")
rivers
str(rivers)
res<-hist(rivers,col =5,border='navy',breaks=8, xlab="miles")
res$breaks
res$counts
res<-hist(rivers,col =rainbow(5),border='navy',breaks=8, xlab="miles")
rivers
str(rivers)
res<-hist(rivers,col =rainbow(5),border='navy',breaks=8, xlab="miles")
res$breaks
res$counts
res<-hist(rivers,col =5,border='navy',breaks=8, xlab="miles")
magazine<-read.csv(file="magazine.csv", header = T)
magazine
summary(magazine)
magazine<-magazine[-1]
barplot(as.matrix(magazine),col=rainbow(2),
main="문인잡지의 작품 발표 현황",ylab="발행 건수",xlab="작품 종류")
legend("topright",legend=c("2017","2016"),fill=rainbow(2))
# 4
trees
summary(trees)
str(trees)
par(mfrow=c(1,3))
hist(trees$Girth,col="cyan",border="black",xlab="지름",main="Histogram of Grith")
hist(trees$Girth,col=1,border="black",xlab="지름",main="Histogram of Grith")
# 4
trees
summary(trees)
str(trees)
par(mfrow=c(1,3))
hist(trees$Girth,col=1,border="black",xlab="지름",main="Histogram of Grith")
hist(trees$Height,col=2,border="blue",xlab="높이",main="Histogram of Height")
hist(trees$Volume,col=3,border="gray",xlab="부피",main="Histogram of Volume")
# 4
trees
summary(trees)
str(trees)
par(mfrow=c(1,3))
hist(trees$Girth,col=1,border=4,xlab="지름",main="Histogram of Grith")
hist(trees$Height,col=2,border=5,xlab="높이",main="Histogram of Height")
hist(trees$Volume,col=3,border=6,xlab="부피",main="Histogram of Volume")
# 4
trees
summary(trees)
str(trees)
par(mfrow=c(1,3))
hist(trees$Girth,col=1,border=2,xlab="지름",main="Histogram of Grith")
hist(trees$Height,col=2,border=1,xlab="높이",main="Histogram of Height")
hist(trees$Volume,col=3,border=6,xlab="부피",main="Histogram of Volume")
# 4
trees
summary(trees)
str(trees)
par(mfrow=c(1,3))
hist(trees$Girth,col=1,border=2,xlab="지름",main="Histogram of Grith")
hist(trees$Height,col=2,border=1,xlab="높이",main="Histogram of Height")
hist(trees$Volume,col=4,border=7,xlab="부피",main="Histogram of Volume")
library(ggplot2)
head(ds)
# (1)
ds<-diamonds
#(2)
par(mar=c(3,6,3,3))
library(ggplot2)
# (1)
diamonds
ds<-diamonds
head(ds)
#(2)
par(mar=c(3,6,3,3))
#(3)
p_cut<-ggplot(ds, aes(cut))+geom_bar(fill='pink')+ggtitle("Quality of the cut")
p_cut<- p_cut+theme(axis.title.y=element_text(angle=0,vjust=0.6,size=15))
p_cut # use for number(6)
p_cutFlop<- p_cut+coord_flip() # + flopped
p_cutFlop
#(4)
par(mar=c(5,4,3,2)+0.1)
p_cutFlop # w/o margin
#(5)
p_depth<-ggplot(ds,aes(depth))+ggtitle("Histogram of Depth")+xlab("percentage")
p_depth<- p_depth +stat_bin(fill="wheat",geom="bar")
p_depth
library(gridExtra)
p_depth <- p_depth + theme(axis.title.y=element_text(angle=0,vjust=0.6,size=15))
final_p =grid.arrange(p_cut,p_depth,ncol=1)
#-2.plot two variables in one plot by ggplot w/ stat-bin
# from ggplot w/ stat_bin
p <-ggplot(ds, aes(depth))
p<-p + stat_bin(aes(color=cut),geom="bar")
p
# To set range of x-axis
xmin<-min(ds$depth)
xmax<-max(ds$depth)
# To set rage of y-axis
tableCut<-table(ds$cut)
ymin<-min(tableCut)
ymax<-max(tableCut)
p_lims<- p+ xlim(0,xmax)+ylim(0,ymax)
p_lims
# To reset both axes
p
