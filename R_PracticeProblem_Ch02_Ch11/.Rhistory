plot(iris[,1],iris[,3],col=iris[,5])
#조건3
title(main="iris 데이터 테이블 산포도 차트트")
#조건4
getwd()
#조건4
library(ggplot2)
#조건4
p<-gglot(iris,aes(iris[,1],iris[,3],color=iris[,5])) +geom_point()
p<-p+tggtitle("iris 데이터 테이블 산포토 차트")
p
ggsave(file="iris.jpg",width=720,height=480,plot=p)
ggsave(file="iris.jpg",width=7,height=4,plot=p)
ggsave(file="iris.jpg",width=7,height=4)
#ch5.
#1.
#조건1
attributes(iris3)
str(iris3)
#조건2
head(iris3)
#조건3
plot(iris3, main="iris3 전체 데이터 셋의 분포현황")
#2.
#조건1
head(iris)
plot(iris[,1],iris[,3])
#조건2
plot(iris[,1],iris[,3],col=iris[,5])
#조건3
title(main="iris 데이터 테이블 산포도 차트")
#ch5.
#1.
#조건1
attributes(iris3)
str(iris3)
#조건2
head(iris3)
#조건3
plot(iris3, main="iris3 전체 데이터 셋의 분포현황")
#2.
#조건1
head(iris)
plot(iris[,1],iris[,3])
#조건2
plot(iris[,1],iris[,3],col=iris[,5])
#조건3
title(main="iris 데이터 테이블 산포도 차트")
ggsave(file="iris.jpg",width=7,height=4)
#조건2
head(iris3)
#조건3
plot(iris3, main="iris3 전체 데이터 셋의 분포현황")
#2.
#조건1
head(iris)
plot(iris[,1],iris[,3])
#조건2
plot(iris[,1],iris[,3],col=iris[,5])
#조건3
title(main="iris 데이터 테이블 산포도 차트")
ggsave(file="iris.jpg",width=720,height=480,units=c("px"))
ggsave(file="iris.jpg",width=7,height=4,units=c("cm"))
p<-gglot(iris,aes(iris[,1],iris[,3],color=iris[,5])) +geom_point()
p<-p+ggtitle("iris 데이터 테이블 산포토 차트")
p
ggsave(file="iris.jpg",width=7,height=4,units=c("cm"))
#ch6.
#1.
library(dplyr)
iris
head(iris)
f1<-iris%>%filter(Petal.Length>=1.5)
f1
#2.
f2<-f1%>%select(1,3,5)
f2
#3.
diff<-f2%>%mutate(f2[,1]-f2[,3])
#3.
diff<-f2%>%mutate(f2[,1]-f2[,2])
diff
#3.
iris$diff<-f2%>%mutate(diff=f2[,1]-f2[,2]) #문제오류 1번열과 2번열 차이
#3.
iris$diff<-f2%>%mutate(f2[,1]-f2[,2]) #문제오류 1번열과 2번열 차이
head(iris)
f1<-iris%>%filter(Petal.Length>=1.5)
f1
#2.
f2<-f1%>%select(1,3,5)
f2
#3.
iris$diff<-f2%>%mutate(f2[,1]-f2[,2]) #문제오류 1번열과 2번열 차이
#3.
diff<-f2%>%mutate(f2[,1]-f2[,2]) #문제오류 1번열과 2번열 차이
diff
#3.
f2%>%mutate(diff=f2[,1]-f2[,2]) #문제오류 1번열과 2번열 차이
f3
#3.
f3<-f2%>%mutate(diff=f2[,1]-f2[,2]) #문제오류 1번열과 2번열 차이
f3
#4.
f4<-f3%>%group_by(Species)
f4
f4_summarise<-f4%>%summarise(mean(Sepal.Length),mean(Petal.Length))
f4_summarise
iris
head(long)
long<-melt(iris,id="Species",variable.name = "LW", value.name = "Values")
head(long)
iris
long<-melt(iris,id="Species",variable.name = "LW", value.name = "Values")
#5
library(reshape2)
iris
long<-melt(iris,id="Species",variable.name = "LW", value.name = "Values")
head(long)
sum<-dcast(long,Species~LW,value.var = "Values",margins=TRUE,fun.aggregate=sum)
sum
#ch7
#1.
dataset<-read.csv("dataset.csv",header=T)
View(dataset)
head(dataset)
dataset2<-subset(dataset,price >=2 & price<=8)
dataset2
dataset2<ifelse(dataset$position==1,5)
dataset2<ifelse(dataset$position==1,5,dataset$position)
dataset2<-subset(dataset,price >=2 & price<=8)
dataset2<ifelse(dataset$position==1,dataset$position=5,dataset$position=dataset$position)
dataset2$positin2[dataset2$position==1]<-'5급'
dataset2
head(dataset2)
dataset2$positin2[dataset2$position==1]<-'5급'
dataset2$positin2[dataset2$position==2]<-'4급'
dataset2$positin2[dataset2$position==3]<-'3급'
dataset2$positin2[dataset2$position==4]<-'2급'
dataset2$positin2[dataset2$position==5]<-'1급'
head(dataset2)
#2.
resident2<-subset(dataset2,!is.na(dataset2$resident))
resident2
#3.
dataset2$age1[dataset2$age<=30]<-"1"
dataset2$age2[dataset2$age>=30 & dataset2$age<=55]<-"2"
dataset2$age3[dataset2$age>=55]<-"3"
dataset2
dataset2$age1
dataset2$age2
dataset2$age3
#4.
new_data<-write.csv(file="cleanData.csv",quote=F, row.names = F)
#4.
new_data<-write.csv(file="cleanData.csv",quote=F, row.names =F)
#4.
new_data<-write.csv(file="cleanData.csv",dataset2,quote=F, row.names =F)
new_data
#4.
new_data<-write.csv(file="cleanData.csv",dataset2,quote=F, row.names =F)
new_data<-read.csv(file="cleanData.csv")
new_data
dataset2[c('age','age2','age3')]
#3.
dataset2$gender2[dataset2$gender==1]<-"남자"
dataset2$gender2[dataset2$gender==2]<-"여자"
dataset2
#6.
read.csv(file="user_data.csv",header=T)
#6.
userdata<-read.csv(file="user_data.csv",header=T)
userdata
head(userdata)
returndata<-read.csv(file="return_data.csv",header=T)
head(userdata)
head(returndata)
head(userdata)
head(returndata)
#조건1.
userid<-returndata%>%select(1)
userid
type(userid)
class(userid)
#ch8.
#1.
# 조건1
quakes
depthgroup
#ch8.
#1.
# 조건1
quakes
depthgroup <- equal.count(quakes$depth, number = 3, overlap = 0)
#ch8.
#1.
# 조건1
library(lattice)
quakes
depthgroup <- equal.count(quakes$depth, number = 3, overlap = 0)
depthgroup
maggroup<- equal.count(quakes$mag,number2,overlap=0)
maggroup<- equal.count(quakes$mag,number=2,overlap=0)
maggroup
#조건3
xyplot(lat~long|depthgroup*maggroup, data = quakes)
#조건3
xyplot(lat~long|depthgroup*maggroup, data = quakes,layout=c(2,3))
#2.
library(latticeExtra)
#2.
install.packages(latticeExtra)
#2.
install.packages("latticeExtra")
library(latticeExtra)
SeatacWeather
head(SeatacWeather)
xyplot(min.temp~month|max.temp,data=SeatacWeather)
xyplot(min.temp~month|max.temp,data=SeatacWeather,type='l')
xyplot(min.temp+max.temp~day|month,data=SeatacWeather,type='l')
xyplot(min.temp+max.temp~day|month,data=SeatacWeather,type='l',layout(3,1))
#조건3
xyplot(lat~long|depthgroup*maggroup, data = quakes,layout=c(2,3))
xyplot(min.temp+max.temp~month,data=SeatacWeather,type='l',layout(3,1))
head(SeatacWeather)
xyplot(min.temp+max.temp~month,data=SeatacWeather,type='l',layout(3,1))
xyplot(min.temp+max.temp~month,data=SeatacWeather,type='l')
str(SeatacWeather)
#3.
diamonds
str(diamonds)
head(diamonds)
p<-ggplot(diamonds,aes(carat,price,col=clarity))+geom_dotplot()
p
p<-ggplot(diamonds,aes(carat,price,colour=clarity))+geom_point()
p
p<-p+geom_smooth()
p
pop <- read.csv("university.csv", header = T)
str(pop)
#4.
# 조건1
seoul <- c(left = 126.77, bottom = 37.40,
right = 127.17, top = 37.70)
#4.
library(ggpmap)
#4.
library(ggmap)
#4.
library(ggmap)
#4.
install.packages("ggmap")
library(ggmap)
# 조건1
seoul <- c(left = 126.77, bottom = 37.40,
right = 127.17, top = 37.70)
map <- get_stamenmap(seoul, zoom = 11, maptype = 'watercolor')
#조건2
getwd()
pop <- read.csv("university.csv", header = T)
str(pop)
#조건3
LON <- pop$LON
LAT <- pop$LAT
#조건4
school <- pop$'학교명'
df <- data.frame(school, LON, LAT)
#조건5
layer1 <- ggmap(map)
layer1
layer2 <- layer1 + geom_point(data = df,
aes(x = LON, y = LAT,
color = factor(school),
size = factor(school)))
layer2
layer3 <- layer2 + geom_text(data = df,
aes(x =LON-0.01, y = LAT-0.01,
label=school))
ggsave("pop201901.png", scale = 1, width = 10.24, height = 7.68)
#ch9.
install.packages("rJava")
install.packages("DBI")
install.packages("RJDBC")
# 단계 2: 데이터베이스 연결을 위한 패키지 로딩
library(DBI)
Sys.setenv(JAVA_HOME = "C:\\Program Files\\Java\\jre1.8.0_251")
library(rJava)
library(RJDBC)
library(DBI)
Sys.setenv(JAVA_HOME = "C:\\Program Files\\Java\\jdk-15.0.1\\bin")
library(rJava)
library(RJDBC)
getwd()
# Oracle 데이터베이스에 연결####################################################
drv <- JDBC("oracle.jdbc.driver.OracleDriver",
"C:\\oraclexe\\app\\oracle\\product\\11.2.0\\server\\jdbc\\lib\\ojdbc6_g.jar")
conn <- dbConnect(drv,
"jdbc:oracle:thin:@//127.0.0.1:1521/xe", "scott", "tiger")
query = "create table GoodsInfo(
proCode char(5) primary key,
proName varchar(30) not null,
price number(8) not null,
maker varchar(25) not null,
CREDIT_LIMIT varchar(30) not null,
)
"
dbSendUpdate(conn, query)
query = "create table GoodsInfo(
proCode char(5) primary key,
proName varchar(30) not null,
price number(8) not null,
maker varchar(25) not null
)
"
dbSendUpdate(conn, query)
query="select*from GoodsInfo"
dbGetQuery(conn,query)
query="SELECT * FROM GoodsInfo"
dbGetQuery(conn,query)
query="insert into GoodsInfo values('1001','냉장고',1800000,SM)"
dbSendUpdate(conn, query)
query="insert into GoodsInfo values('1001','냉장고','1800000',SM)"
dbSendUpdate(conn, query)
query="insert into GoodsInfo values('1003','HDTV','2500000',HP)"
dbSendUpdate(conn, query)
# 단계2
query="insert into GoodsInfo values(1001,'냉장고',1800000,SM)"
dbSendUpdate(conn, query)
#2.
public_data<-read.csv(file="publicCorona.csv",header=T)
public_data
#2.
public_data<-read.csv(file="publicCorona.csv",header=F)
public_data
#2.
library(KoNLP)
detach(package:"rJava")
detach(packages:"rJava")
detach(packages:rJava)
detach("package:rJava")
detach("package:RJDBC")
detach("package:rJava")
#2.
library(KoNLP)
install.packages("KoNLP")
#2.
library(KoNLP)
library(KoNLP)
library(rJava)
detach("package:KoNLP", unload = TRUE)
library(KoNLP)
detach("package:KoNLP", unload = TRUE)
Sys.setenv(JAVA_HOME = "C:\\Program Files\\Java\\jdk-15.0.1\\bin")
library(rJava)
library(RJDBC)
#2.
library(KoNLP)
library(rJava)
library(KoNLP)
library(rJava)
library(KoNLP)
library(tm)
library(wordcloud)
public_data<-read.csv(file="publicCorona.csv",header=F)
public_data
public_data<-readLines(public_data)
public_data<-read.csv(file="publicCorona.csv",header=F)
re_data<-readLines(public_data)
class(public_data)
str(public_data)
re_data<-public_data[,c(3:17)]
re_data
str(re_data)
re_data<-public_data[,1]
str(re_data)
re_data<-public_data[,14]
str(re_data)
#ch11
install.packages("MASS")
library(MASS)
data(Animals)
head(Animals)
library(latticeExtra)
head(SeatacWeather)
str(SeatacWeather)
xyplot(min.temp+max.temp~day|month,data=SeatacWeather,type='l',layout=c(1,3),ylab="Temperature")
#3.
library(ggplot2)
diamonds
str(diamonds)
head(diamonds)
p<-ggplot(diamonds,aes(carat,price,colour=clarity))+geom_point()
p<-p+geom_smooth()
p
library(ggmap)
# 조건1
seoul <- c(left = 126.77, bottom = 37.40,
right = 127.17, top = 37.70)
map <- get_stamenmap(seoul, zoom = 11, maptype = 'watercolor')
#조건2
getwd()
pop <- read.csv("university.csv", header = T)
str(pop)
#조건3
LON <- pop$LON
LAT <- pop$LAT
#조건4
school <- pop$'학교명'
df <- data.frame(school, LON, LAT)
#조건5
layer1 <- ggmap(map)
layer1
#4.
install.packages("ggmap")
library(ggmap)
# 조건1
seoul <- c(left = 126.77, bottom = 37.40,
right = 127.17, top = 37.70)
map <- get_stamenmap(seoul, zoom = 11, maptype = 'watercolor')
#조건2
getwd()
pop <- read.csv("university.csv", header = T)
str(pop)
#조건3
LON <- pop$LON
LAT <- pop$LAT
#조건4
school <- pop$'학교명'
df <- data.frame(school, LON, LAT)
#조건5
layer1 <- ggmap(map)
layer1
layer2 <- layer1 + geom_point(data = df,
aes(x = LON, y = LAT,
color = factor(school),
size = factor(school)))
layer2
layer3 <- layer2 + geom_text(data = df,
aes(x =LON-0.01, y = LAT-0.01,
label=school))
layer3
ggsave("pop201901.png", scale = 1, width = 10.24, height = 7.68)
#ch11
install.packages("MASS")
library(MASS)
data(Animals)
head(Animals)
braincol<-Animals$brain
summary(braincol)
mean(braincol)
median(braincol)
var(braincol)
max(braincol)
min(braincol)
#2
#조건1
data<-read.csv(file="descriptive.csv")
str(data)
df1<-data.frame(data$type,data$pass)
df1
table_df1<-table(df1)
table_df1
hist(table_df1)
pi(table_df1)
pie(table_df1)
hist(table_df1)
sd(braincol)
describe(data)
type<-data$type
pass<-data$pass
table(type)
table(pass)
hist(type)
histtable_type()
hist(table_type)
table_type<-table(type)
table_pass<-table(pass)
hist(table_type)
hist(table_pass)
type<-data$type
pass<-data$pass
table_type<-table(type)
table_pass<-table(pass)
hist(table_type)
hist(table_pass)
bar(table_type)
barplot(table_type)
pie(table_type)
#조건2
age<-data$age
age
mean(age)
sd(age)
skewness(age)
#조건2
install.packages("moments")
library(moments)
skewness(age)
kurtosis(age)
hist(age,freq=F)
lines(density(age))
mean(age)
sd(age)
skewness(age)
age
summary(age)
x<-seq(35,40,0.1)
x
x<-seq(35,80,0.1)
x
cruve(dnorm(x,mean(age),sd(age)),col='red',add=T)
curve(dnorm(x,mean(age),sd(age)),col='red',add=T)
